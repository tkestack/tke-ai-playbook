apiVersion: v1
kind: Service
metadata:
  name: {{ include "mcp-registry.fullname" . }}-postgres
  labels:
    app: {{ include "mcp-registry.name" . }}-postgres
spec:
  type: {{ .Values.postgresql.primary.service.type }}
  ports:
    - port: {{ .Values.postgresql.primary.service.port }}
      targetPort: 5432
      protocol: TCP
      name: postgres
  selector:
    app: {{ include "mcp-registry.name" . }}-postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mcp-registry.fullname" . }}-postgres
  labels:
    app: {{ include "mcp-registry.name" . }}-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "mcp-registry.name" . }}-postgres
  template:
    metadata:
      labels:
        app: {{ include "mcp-registry.name" . }}-postgres
    spec:
      containers:
      - name: postgres
        image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_DB
          value: {{ .Values.postgresql.auth.database }}
        - name: POSTGRES_USER
          value: {{ .Values.postgresql.auth.username }}
        - name: POSTGRES_PASSWORD
          value: {{ .Values.postgresql.auth.password }}
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - {{ .Values.postgresql.auth.username }}
            - -d
            - {{ .Values.postgresql.auth.database }}
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - {{ .Values.postgresql.auth.username }}
            - -d
            - {{ .Values.postgresql.auth.database }}
          initialDelaySeconds: 5
          periodSeconds: 5
